import{_ as s,c as a,o as n,a4 as i,ba as p,bb as e,bc as t,bd as l}from"./chunks/framework.CbbsNvug.js";const C=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"document/views/Flutter/安装.md","filePath":"document/views/Flutter/安装.md"}'),r={name:"document/views/Flutter/安装.md"},d=i(`<h3 id="安装-flutter-sdk" tabindex="-1">安装 Flutter SDK <a class="header-anchor" href="#安装-flutter-sdk" aria-label="Permalink to &quot;安装 Flutter SDK&quot;">​</a></h3><p><a href="https://docs.flutter.dev/release/archive#stable-channel-windows" target="_blank" rel="noreferrer">点击下载 Flutter SDK</a>，将下载的 SDK 解压，放到一个目录。然后将该目录下的 ./flutter/bin 添加到环境变量</p><p>配置完环境变量后即可执行<code>flutter doctor</code>指令来诊断 flutter 环境还需哪些内容</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">C:\\Users\\zouzhu&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flutter doctor</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">╔════════════════════════════════════════════════════════════════════════════╗</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">║</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> A new version of Flutter is available!                                     ║</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">║</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                                                            ║</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">║</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> To update to the latest version, run &quot;flutter upgrade&quot;.                    ║</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">╚════════════════════════════════════════════════════════════════════════════╝</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Doctor</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> summary </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> see all details, run flutter doctor -v</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[√] Flutter (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Channel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stable, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.5</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.3, on Microsoft Windows [Version </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.22621.3880], locale zh-CN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[X] Android toolchain - develop </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Android devices</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    X</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cmdline-tools component is missing</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      Run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">path/to/sdkmanager</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;cmdline-tools;latest&quot;\`</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">      See</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://developer.android.com/studio/command-line for more details.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[√] Chrome - develop </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> the web</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] Android Studio (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> installed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[√] Connected device (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> available</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Doctor</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> found issues in </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> categories.</span></span></code></pre></div><p>通过错误日志可以看出 flutter 的环境需要依赖<code>Android SDK</code>(Android软件开发工具包)</p><ul><li><p>X 表示必须要解决的错误</p></li><li><p>! 表示建议解决的问题</p></li></ul><p>虽然可以使用<code>VSCode</code>进行开发，但还是推荐大家安装<code>Android Studio</code>，因为通过<code>Android Studio</code>可以快速的下载<code>Android SDK</code></p><h3 id="安装-android-studio" tabindex="-1">安装 Android Studio <a class="header-anchor" href="#安装-android-studio" aria-label="Permalink to &quot;安装 Android Studio&quot;">​</a></h3><p>官方下载地址（中国大陆地区无法打开）：<a href="https://developer.android.com/studio" target="_blank" rel="noreferrer">https://developer.android.com/studio</a></p><p>中国大陆搬运站：<a href="https://www.androiddevtools.cn/" target="_blank" rel="noreferrer">https://www.androiddevtools.cn</a></p><p>根据自身的操作系统平台，选择对应的Android Studio最新的正式版下载：</p><p><img src="`+p+'" alt=""></p><p><em>Android Studio 运行需依赖 Java SDK，所以要配置 Java 环境变量，以及 JAVA_HOME 环境变量</em></p><p>配置完毕后再次打开 Android Studio，选择不导入任何设置</p><p><img src="'+e+'" alt=""></p><p>第一次打开会提示无法访问 Android SDK（废话，我们的目的就是为了安装SDK）</p><p>Android SDK 下载服务器不在国内，所以下载速度非常慢</p><p>可以选择设置代理，通过国内镜像下载，可以体验飞一般的感觉！</p><p>点击 <code>Setup Proxy</code> 勾选 <code>Auto-detect proxy settings</code> 输入：<strong>mirrors.neusoft.edu.cn</strong> ，同时也可以选择下面的 <code>Check connection</code> 来测试该代理是否可用</p><p><img src="'+t+'" alt=""></p><p>设置完毕代理后会进入一个初始化向导，我们不需要使用 Android Studio 进行开发，所以可以直接不理会，选择关闭并勾选以后都不要在运行这个向导了</p><p>后续安装插件参考 (不想写了，步骤太多)：<a href="https://tianchenglee.github.io/Chapter1/InstallFlutter.html" target="_blank" rel="noreferrer">安装Flutter环境 · Flutter从入门到精通</a></p><p><a href="https://blog.csdn.net/qq_56687452/article/details/125962977" target="_blank" rel="noreferrer">flutter环境报错：cmdline-tools component is missing Run path/to/sdkmanager--install“cmdline-tools；latest“-CSDN博客</a></p><p>flutter 依赖插件全部安装完后，重新运行 <code>flutter doctor</code>，输出全部勾选后，至此 flutter 环境配置完毕：</p><p><img src="'+l+`" alt=""></p><h3 id="创建-flutter-项目" tabindex="-1">创建 Flutter 项目 <a class="header-anchor" href="#创建-flutter-项目" aria-label="Permalink to &quot;创建 Flutter 项目&quot;">​</a></h3><p>1</p><h3 id="flutter-工程目录结构" tabindex="-1">Flutter 工程目录结构 <a class="header-anchor" href="#flutter-工程目录结构" aria-label="Permalink to &quot;Flutter 工程目录结构&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>flutter_project/</span></span>
<span class="line"><span>|-- jsons                              # 保存json文件(网络数据传输和持久化，需要将json转为Dart Model)</span></span>
<span class="line"><span>|-- assets/                            # 静态资源文件夹</span></span>
<span class="line"><span>    |-- images/                        # 图片资源文件夹</span></span>
<span class="line"><span>    |   |-- logo.png</span></span>
<span class="line"><span>    |   |-- background.jpg</span></span>
<span class="line"><span>    |-- fonts/                         # 字体文件夹</span></span>
<span class="line"><span>    |   |-- OpenSans-Regular.ttf</span></span>
<span class="line"><span>|-- lib</span></span>
<span class="line"><span>    ├── config              # 配置相关代码</span></span>
<span class="line"><span>    ├── constants           # 常量定义</span></span>
<span class="line"><span>    ├── common              # 一些工具类，如通用方法类、网络接口类、保存全局变量的静态类等</span></span>
<span class="line"><span>    ├── l10n                # 国际化相关的类都在此目录下</span></span>
<span class="line"><span>    ├── data                # 数据处理相关代码</span></span>
<span class="line"><span>    ├── models              # Json 文件对应的 Dart Model 类会在此目录下（数据模型）</span></span>
<span class="line"><span>    ├── screens             # 应用程序屏幕视图</span></span>
<span class="line"><span>    ├── states              # 保存 APP 中需要跨组件共享的状态类</span></span>
<span class="line"><span>    ├── routes              # 存放所有路由页面类</span></span>
<span class="line"><span>    ├── services            # 服务层，如网络请求、数据库操作</span></span>
<span class="line"><span>    ├── utils               # 工具类</span></span>
<span class="line"><span>    └── widgets             # APP内封装的一些Widget组件都在该目录下</span></span>
<span class="line"><span>|-- test/                   # 测试代码</span></span>
<span class="line"><span>|-- web/                    # Web端代码</span></span>
<span class="line"><span>|-- pubspec.yaml            # 项目依赖配置文件</span></span>
<span class="line"><span>|-- README.md               # 项目说明文件</span></span>
<span class="line"><span>|-- analysis_options.yaml   # 代码静态分析配置</span></span>
<span class="line"><span>|-- CODE_OF_CONDUCT.md      # 行为准则</span></span>
<span class="line"><span>|-- LICENSE                 # 许可证文件</span></span>
<span class="line"><span>|-- CHANGELOG.md            # 变更日志</span></span>
<span class="line"><span>|-- CONTRIBUTING.md         # 贡献指南</span></span>
<span class="line"><span>|-- .github/                # GitHub相关配置</span></span>
<span class="line"><span>    |-- workflows/          # GitHub Actions配置</span></span>
<span class="line"><span>|-- android/                # Android原生代码</span></span>
<span class="line"><span>    |-- app/                # Android应用代码</span></span>
<span class="line"><span>    |-- gradle/             # Gradle构建配置</span></span>
<span class="line"><span>|-- ios/                    # iOS原生代码</span></span>
<span class="line"><span>    |-- Runner/             # iOS应用代码</span></span>
<span class="line"><span>    |-- Podfile             # CocoaPods依赖管理文件</span></span>
<span class="line"><span>|-- scripts/                # 脚本文件，如构建脚本、部署脚本等</span></span></code></pre></div>`,29),h=[d];function o(k,c,F,u,g,E){return n(),a("div",null,h)}const m=s(r,[["render",o]]);export{C as __pageData,m as default};
