import{_ as s,c as i,o as a,a4 as n,b7 as e,b8 as l}from"./chunks/framework.DqAL1RR1.js";const y=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"document/services/ruby/rails/Rails 集成 Sidekiq 队列.md","filePath":"document/services/ruby/rails/Rails 集成 Sidekiq 队列.md"}'),p={name:"document/services/ruby/rails/Rails 集成 Sidekiq 队列.md"},h=n('<h2 id="sidekiq-介绍" tabindex="-1">Sidekiq 介绍 <a class="header-anchor" href="#sidekiq-介绍" aria-label="Permalink to &quot;Sidekiq 介绍&quot;">​</a></h2><p><a href="https://github.com/sidekiq/sidekiq/wiki" target="_blank" rel="noreferrer">👉 点击查看 sidekiq 文档</a></p><p>Sidekiq 是 Ruby on Rails 中蛮常用的后台任务处理系统，本身提供的 API 十分简洁，Sidekiq 分成 3 种版本(开源、专业、企业版)，下面是功能差异比较表，本文以OSS(开源版本进行操作).</p><p><img src="'+e+`" alt="Untitled"></p><p>官方文档链接</p><p><a href="https://github.com/mperham/sidekiq" target="_blank" rel="noreferrer">https://github.com/mperham/sidekiq</a></p><p>博文文档链接</p><p><a href="https://ithelp.ithome.com.tw/articles/10246607" target="_blank" rel="noreferrer">Day25 - Ruby on Rails 中的 Sidekiq 的介紹與應用 - iT 邦幫忙::一起幫忙解決難題，拯救 IT 人的一天</a></p><h2 id="sidekiq-安装、配置" tabindex="-1">Sidekiq 安装、配置 <a class="header-anchor" href="#sidekiq-安装、配置" aria-label="Permalink to &quot;Sidekiq 安装、配置&quot;">​</a></h2><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Gemfile</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">gem </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;sidekiq&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;~&gt; 6.1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&gt;= 6.1.2&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 記得要 bundle</span></span></code></pre></div><p>将 ActiveJob 改由 Sidekiq 处理</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># config/application.rb</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">config.active_job.queue_adapter </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> :sidekiq</span></span></code></pre></div><p>备注：预设情况下的伫列(Queue) 的优先顺序都为 1，下方 [’default’, 1] 和 [’mailers’, 1] 可缩写成 default 和 mailers</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># config/sidekiq.yml</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:concurrency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:queues</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;default&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;mailers&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">:timeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">86400</span></span></code></pre></div><h2 id="sidekiq-web-可视化界面" tabindex="-1">Sidekiq Web 可视化界面 <a class="header-anchor" href="#sidekiq-web-可视化界面" aria-label="Permalink to &quot;Sidekiq Web 可视化界面&quot;">​</a></h2><p>加入 SideKiq Web 可视化界面，可视化界面路径为当前域的 sidekiq (<a href="https://www.peekaboomoments.com/sidekiq" target="_blank" rel="noreferrer">https://www.peekaboomoments.com/sidekiq</a>)</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># config/routes.rb</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">require</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;sidekiq/web&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mount </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Sidekiq</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Web</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =&gt; </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/sidekiq&#39;</span></span></code></pre></div><p><img src="`+l+`" alt="Untitled"></p><h2 id="第一个任务-worker" tabindex="-1">第一个任务(Worker) <a class="header-anchor" href="#第一个任务-worker" aria-label="Permalink to &quot;第一个任务(Worker)&quot;">​</a></h2><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># app/controllers/users_controller.rb</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Api</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CreateOrderWorker</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.perform_async(@user.id)</span></span></code></pre></div><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># app/worker/api/create_order_worker.rb</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">module</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Api</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CreateOrderWorker</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    include</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Sidekiq</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Worker</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sidekiq_options </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">retry:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 7</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dead:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">queue:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;create_order_worker&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sidekiq_retry_in { |count| count </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 86_400</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    sidekiq_retries_exhausted </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> |msg, _ex|</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      subject </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;[Api::CreateOrderWorker]Out of retries! </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">#{msg[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;class&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> with </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">#{msg[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;args&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      _message </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;error: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">#{msg[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;error_message&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">]}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      FileLog</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.logger(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;worker/api/create_order_worker.log&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).error(subject)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # ...</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> perform</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(user_id)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      logger.info </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;====== start ====== user_id: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">#{user_id}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      puts</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;hello world&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      logger.info </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;====== done ======&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    rescue</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> StandardError</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =&gt; e</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      logger.error </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;[Api::CreateOrderWorker] ERROR:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> #{e.inspect}</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> #{e.backtrace}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    def</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> logger</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      FileLog</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.logger(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;worker/api/create_order_worker.log&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  end</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>每新增一个 Worker 都要重新执行 sidekiq 程序</p><div class="language-ruby vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ruby</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sidekiq</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># or</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bundle </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">exec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sidekiq</span></span></code></pre></div><h2 id="sidekiq-api" tabindex="-1">Sidekiq API <a class="header-anchor" href="#sidekiq-api" aria-label="Permalink to &quot;Sidekiq API&quot;">​</a></h2><p><a href="https://github.com/sidekiq/sidekiq/wiki/API" target="_blank" rel="noreferrer">💯 点击查看 sidekiq api 文档</a></p>`,25),k=[h];function t(r,d,g,o,E,F){return a(),i("div",null,k)}const u=s(p,[["render",t]]);export{y as __pageData,u as default};
