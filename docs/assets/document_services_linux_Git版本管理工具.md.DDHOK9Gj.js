import{_ as s,c as t,o as i,a4 as a}from"./chunks/framework.BvhOzVXl.js";const k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"document/services/linux/Git版本管理工具.md","filePath":"document/services/linux/Git版本管理工具.md"}'),e={name:"document/services/linux/Git版本管理工具.md"},p=a('<h2 id="git-常用命令" tabindex="-1">Git 常用命令 <a class="header-anchor" href="#git-常用命令" aria-label="Permalink to &quot;Git 常用命令&quot;">​</a></h2><h3 id="pull-操作" tabindex="-1">pull 操作 <a class="header-anchor" href="#pull-操作" aria-label="Permalink to &quot;pull 操作&quot;">​</a></h3><p>1、将远程指定分支 拉取到 本地指定分支上：</p><div class="language-tex vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tex</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git pull origin &lt;远程分支名&gt;:&lt;本地分支名&gt;</span></span></code></pre></div><p>2、将远程指定分支 拉取到 本地当前分支上：</p><div class="language-tex vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tex</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git pull origin &lt;远程分支名&gt;</span></span></code></pre></div><p>3、将与本地当前分支同名的远程分支 拉取到 本地当前分支上(需先关联远程分支，方法见文章末尾)</p><div class="language-tex vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tex</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git pull</span></span></code></pre></div><p>在克隆远程项目的时候，本地分支会自动与远程仓库建立追踪关系，可以使用默认的origin来替代远程仓库名， 所以，我常用的命令就是 git pull origin &lt;远程分支名&gt;，操作简单，安全可控。</p><h3 id="push-操作" tabindex="-1">push 操作 <a class="header-anchor" href="#push-操作" aria-label="Permalink to &quot;push 操作&quot;">​</a></h3><p>1、将本地当前分支 推送到 远程指定分支上（注意：pull是远程在前本地在后，push相反）：</p><div class="language-tex vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tex</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git push origin &lt;本地分支名&gt;:&lt;远程分支名&gt;</span></span></code></pre></div><p>2、将本地当前分支 推送到 与本地当前分支同名的远程分支上（注意：pull是远程在前本地在后，push相反）：</p><div class="language-tex vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tex</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git push origin &lt;本地分支名&gt;</span></span></code></pre></div><p>3、将本地当前分支 推送到 与本地当前分支同名的远程分支上(需先关联远程分支，方法见文章末尾)</p><div class="language-tex vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tex</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git push</span></span></code></pre></div><p>同样的，推荐使用第2种方式，git push origin &lt;远程同名分支名&gt;</p><p>附：// 将本地分支与远程同名分支相关联</p><div class="language-tex vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tex</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">git push --set-upstream origin &lt;本地分支名&gt;</span></span></code></pre></div><p>git merge origin/master</p>',20),l=[p];function n(h,o,c,d,g,r){return i(),t("div",null,l)}const v=s(e,[["render",n]]);export{k as __pageData,v as default};
